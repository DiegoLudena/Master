# -*- coding: utf-8 -*-
"""IABD_MP3_T03_05_flask.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1O7A0ZT_sqnO4UOGnsdPogW5XMJP0_Tk-

EJERCICIO 5: Crear una Aplicación Flask con un Modelo de Clasificación de Iris
1. Preparar el Entorno
•	Instalar Python: Asegúrate de tener Python instalado en tu máquina.
•	Instalar Flask y Dependencias: Usa pip para instalar Flask y cualquier otra librería necesaria.
2. Entrenar y Guardar el Modelo
  1.	Entrenamiento del Modelo:
    o	Carga el conjunto de datos Iris.
    o	Divide los datos en conjuntos de entrenamiento y prueba.
    o	Entrena un modelo de clasificación (por ejemplo, RandomForestClassifier).
    o	Guarda el modelo entrenado a un archivo.
  2.	Guardar el Modelo:
    o	Utiliza una herramienta como joblib o pickle para guardar el modelo en un archivo que podrás cargar más tarde.
3. Crear la Aplicación Flask
  1.	Configurar la Aplicación:
    o	Crea un archivo Python para definir la aplicación Flask.
    o	Define las rutas necesarias:
      	Ruta principal (/) que devuelve un mensaje de bienvenida.
      	Ruta para predicciones (/predict) que recibirá datos en formato JSON y devolverá la clasificación del modelo.
  2.	Cargar el Modelo:
    o	Carga el modelo guardado al iniciar la aplicación Flask.
  3.	Definir el Endpoint de Predicción:
    o	Extrae los datos de la solicitud JSON.
    o	Pasa estos datos al modelo para obtener una predicción.
    o	Devuelve la predicción como una respuesta JSON.
4. Ejecutar y Probar la Aplicación
  1.	Ejecutar Flask:
    o	Inicia el servidor Flask y asegúrate de que está corriendo en http://127.0.0.1:5000/.
  2.	Probar la API:
    o	Usa una herramienta como curl o Postman para enviar solicitudes POST a la ruta de predicción.
    o	Envía datos de ejemplo en formato JSON y verifica la respuesta del modelo.

3. Configurar la aplicación Flask:
"""

from flask import Flask, request, jsonify
from joblib import load

app = Flask(__name__)

# Cargar el modelo
model = load('iris_model.joblib')

@app.route('/')
def home():
    return "¡Bienvenido a la API de clasificación de Iris!"

@app.route('/predict', methods=['POST'])
def predict():
    data = request.get_json(force=True)
    prediction = model.predict([[data['sepal_length'], data['sepal_width'], data['petal_length'], data['petal_width']]])[0]
    return jsonify({'prediction': prediction})

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5000)

"""Aquí no he sabido seguir con Google Colab: he tenido que descargar el .py y ejecutar en local, ya que las direcciones que me da el programa son locales, no de acceso remoto. Ejecutando en local, efectivamente se puede acceder a la app:"""