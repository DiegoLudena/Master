# -*- coding: utf-8 -*-
"""IABD_MP3_T03_05_modelo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1O7A0ZT_sqnO4UOGnsdPogW5XMJP0_Tk-

EJERCICIO 5: Crear una Aplicación Flask con un Modelo de Clasificación de Iris
1. Preparar el Entorno
•	Instalar Python: Asegúrate de tener Python instalado en tu máquina.
•	Instalar Flask y Dependencias: Usa pip para instalar Flask y cualquier otra librería necesaria.
2. Entrenar y Guardar el Modelo
  1.	Entrenamiento del Modelo:
    o	Carga el conjunto de datos Iris.
    o	Divide los datos en conjuntos de entrenamiento y prueba.
    o	Entrena un modelo de clasificación (por ejemplo, RandomForestClassifier).
    o	Guarda el modelo entrenado a un archivo.
  2.	Guardar el Modelo:
    o	Utiliza una herramienta como joblib o pickle para guardar el modelo en un archivo que podrás cargar más tarde.
3. Crear la Aplicación Flask
  1.	Configurar la Aplicación:
    o	Crea un archivo Python para definir la aplicación Flask.
    o	Define las rutas necesarias:
      	Ruta principal (/) que devuelve un mensaje de bienvenida.
      	Ruta para predicciones (/predict) que recibirá datos en formato JSON y devolverá la clasificación del modelo.
  2.	Cargar el Modelo:
    o	Carga el modelo guardado al iniciar la aplicación Flask.
  3.	Definir el Endpoint de Predicción:
    o	Extrae los datos de la solicitud JSON.
    o	Pasa estos datos al modelo para obtener una predicción.
    o	Devuelve la predicción como una respuesta JSON.
4. Ejecutar y Probar la Aplicación
  1.	Ejecutar Flask:
    o	Inicia el servidor Flask y asegúrate de que está corriendo en http://127.0.0.1:5000/.
  2.	Probar la API:
    o	Usa una herramienta como curl o Postman para enviar solicitudes POST a la ruta de predicción.
    o	Envía datos de ejemplo en formato JSON y verifica la respuesta del modelo.

1. Preparación del entorno
1. Instalar Python:

Google Colab ya tiene Python preinstalado, así que no necesita mos hacer este paso. En otros entornos sí podría hacer falta
2. Instalar Flask y Dependencias:

Necesitamos instalar Flask y otras bibliotecas como scikit-learn (para el modelo), pandas (para manipular datos) y joblib (para guardar el modelo).
"""

# Para entornos fuera de Google Colab, asegúrate de tener Python instalado.
# Si no lo tienes, puedes descargarlo desde python.org

# Instala las dependencias necesarias:
!pip install Flask scikit-learn pandas joblib

"""2. Entrenar y Guardar el Modelo"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from joblib import dump

# 1. Cargar el conjunto de datos Iris
iris = pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data', header=None)
iris.columns = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'class']

# 2. Dividir los datos en conjuntos de entrenamiento y prueba
X = iris[['sepal_length', 'sepal_width', 'petal_length', 'petal_width']]
y = iris['class']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# 3. Entrenar un modelo de clasificación (RandomForestClassifier)
model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)

# 4. Guardar el modelo entrenado a un archivo
dump(model, 'iris_model.joblib')